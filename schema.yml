openapi: 3.0.3
info:
  title: API Cola e Bora
  version: 2.0.0
  description: Cola&Bora é um projeto criado com o intuito de conectar pessoas a ONGs
    e ações sociais, permitindo que usuários se inscrevam, participem de eventos e
    façam doações a ONGs com as quais se identifiquem!
paths:
  /api/donations/{id}/:
    get:
      operationId: api_donations_list
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDonationList'
          description: ''
    post:
      operationId: api_donations_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Donation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Donation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Donation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Donation'
          description: ''
  /api/events/:
    get:
      operationId: api_events_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAllEventsList'
          description: ''
  /api/events/{event_id}/:
    get:
      operationId: api_events_retrieve
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    post:
      operationId: api_events_create
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_events_destroy
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/events/ongs/{ong_id}/:
    get:
      operationId: api_events_ongs_retrieve
      parameters:
      - in: path
        name: ong_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllEvents'
          description: ''
  /api/ongs/:
    get:
      operationId: api_ongs_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOngList'
          description: ''
    post:
      operationId: api_ongs_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ong'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ong'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ong'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ong'
          description: ''
  /api/ongs/{event_id}/users/:
    get:
      operationId: api_ongs_users_retrieve
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/ongs/{id}/:
    get:
      operationId: api_ongs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OngSerializerToAdm'
          description: ''
    put:
      operationId: api_ongs_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OngSerializerToAdm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OngSerializerToAdm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OngSerializerToAdm'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OngSerializerToAdm'
          description: ''
    patch:
      operationId: api_ongs_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOngSerializerToAdm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOngSerializerToAdm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOngSerializerToAdm'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OngSerializerToAdm'
          description: ''
    delete:
      operationId: api_ongs_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/ongs/events/:
    post:
      operationId: api_ongs_events_create
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/ongs/events/{event_id}/:
    patch:
      operationId: api_ongs_events_partial_update
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_ongs_events_destroy
      parameters:
      - in: path
        name: event_id
        schema:
          type: string
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: api_users_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: api_users_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: api_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: api_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: api_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: api_users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/{user_id}/payments/:
    get:
      operationId: api_users_payments_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPaymentInfoList'
          description: ''
    post:
      operationId: api_users_payments_create
      parameters:
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PaymentInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PaymentInfo'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentInfo'
          description: ''
  /api/users/{user_id}/payments/{id}:
    get:
      operationId: api_users_payments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePaymentInfo'
          description: ''
    put:
      operationId: api_users_payments_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePaymentInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdatePaymentInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdatePaymentInfo'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePaymentInfo'
          description: ''
    patch:
      operationId: api_users_payments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePaymentInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePaymentInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdatePaymentInfo'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePaymentInfo'
          description: ''
    delete:
      operationId: api_users_payments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: user_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/users/login/:
    post:
      operationId: api_users_login_create
      tags:
      - api
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/users/refresh/:
    post:
      operationId: api_users_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/withdraw/{id}/:
    get:
      operationId: api_withdraw_list
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - api
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedWithdrawList'
          description: ''
    post:
      operationId: api_withdraw_create
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Withdraw'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Withdraw'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Withdraw'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Withdraw'
          description: ''
components:
  schemas:
    Address:
      type: object
      properties:
        street:
          type: string
          maxLength: 127
        number:
          type: string
          maxLength: 10
        cep:
          type: string
          maxLength: 10
        extra:
          type: string
          maxLength: 100
        id:
          type: string
          format: uuid
          readOnly: true
      required:
      - cep
      - extra
      - id
      - number
      - street
    AllEvents:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 127
        date:
          type: string
          format: date-time
        description:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        ong:
          type: string
          format: uuid
      required:
      - address
      - date
      - description
      - id
      - name
      - ong
    CategoryEnum:
      enum:
      - meio ambiente
      - animais
      - assistência social
      - cultura
      - saúde
      - desenvolvimento e defesa de direitos
      - habitação
      - educação
      - pesquisa
      - outro
      type: string
    Donation:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
        date:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
        ong:
          type: string
          format: uuid
          readOnly: true
      required:
      - date
      - id
      - ong
      - user
      - value
    Ong:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 60
        email:
          type: string
          format: email
          maxLength: 60
        tel:
          type: string
          maxLength: 15
        description:
          type: string
          maxLength: 800
        cnpj:
          type: string
          maxLength: 14
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          writeOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        user:
          type: string
          format: uuid
          readOnly: true
      required:
      - cnpj
      - createdAt
      - description
      - email
      - id
      - name
      - tel
      - updatedAt
      - user
    OngSerializerToAdm:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 60
        email:
          type: string
          format: email
          maxLength: 60
        tel:
          type: string
          maxLength: 15
        description:
          type: string
          maxLength: 800
        cnpj:
          type: string
          maxLength: 14
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/CategoryEnum'
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
      required:
      - balance
      - category
      - cnpj
      - createdAt
      - description
      - email
      - id
      - name
      - tel
      - updatedAt
      - user
    PaginatedAllEventsList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/AllEvents'
    PaginatedDonationList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Donation'
    PaginatedOngList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Ong'
    PaginatedPaymentInfoList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/PaymentInfo'
    PaginatedUserList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PaginatedWithdrawList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Withdraw'
    PatchedOngSerializerToAdm:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 60
        email:
          type: string
          format: email
          maxLength: 60
        tel:
          type: string
          maxLength: 15
        description:
          type: string
          maxLength: 800
        cnpj:
          type: string
          maxLength: 14
        createdAt:
          type: string
          format: date-time
          readOnly: true
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        balance:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
        category:
          allOf:
          - $ref: '#/components/schemas/CategoryEnum'
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
    PatchedUpdatePaymentInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        number:
          type: string
          maxLength: 20
        security_code:
          type: string
          maxLength: 3
        due_date:
          type: string
          format: date
        user:
          type: string
          format: uuid
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        email:
          type: string
          format: email
        birth_date:
          type: string
          format: date
        password:
          type: string
          writeOnly: true
          maxLength: 128
        create_at:
          type: string
          format: date-time
          readOnly: true
        update_at:
          type: string
          format: date-time
          readOnly: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
    PaymentInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        number:
          type: string
          maxLength: 20
        security_code:
          type: string
          maxLength: 3
        due_date:
          type: string
          format: date
        user_id:
          type: string
          readOnly: true
      required:
      - due_date
      - id
      - number
      - security_code
      - user_id
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    UpdatePaymentInfo:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        number:
          type: string
          maxLength: 20
        security_code:
          type: string
          maxLength: 3
        due_date:
          type: string
          format: date
        user:
          type: string
          format: uuid
          readOnly: true
      required:
      - due_date
      - id
      - number
      - security_code
      - user
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        email:
          type: string
          format: email
        birth_date:
          type: string
          format: date
        password:
          type: string
          writeOnly: true
          maxLength: 128
        create_at:
          type: string
          format: date-time
          readOnly: true
        update_at:
          type: string
          format: date-time
          readOnly: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
      required:
      - birth_date
      - create_at
      - email
      - id
      - name
      - password
      - update_at
    Withdraw:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        value:
          type: string
          format: decimal
          pattern: ^-?\d{0,18}(?:\.\d{0,2})?$
        date:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
          format: uuid
          readOnly: true
        ong:
          type: string
          format: uuid
          readOnly: true
      required:
      - date
      - id
      - ong
      - user
      - value
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
